{"version":3,"sources":["components/HeaderComp.js","components/FooterComp.js","components/PomodoroComp.js","App.js","serviceWorker.js","index.js"],"names":["HeaderComp","props","text","FooterComp","DisplayComp","state","togglePlay","bind","reset","this","className","id","displayText","timeLeft","onClick","pause","class","React","Component","ControlComp","counter","value","increment","decrement","nextProps","setState","resetBack","getTime","type","time","controlClass","onChange","sendValue","valueID","btn1ID","btn2ID","PomodoroComp","minLeft","secLeft","sessValue","brkValue","play","session","idVar","flipped","timeLeftString","startTimer","stopTimer","playSound","rewind","sec","min","setInterval","clearInterval","sound","document","getElementById","currentTime","running","src","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3992356f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet HeaderComp = props => {\r\n  return <header> {props.text} </header>;\r\n};\r\n\r\nexport default HeaderComp;\r\n","import React from \"react\";\r\n\r\nlet FooterComp = props => {\r\n  return <footer> {props.text} </footer>;\r\n};\r\n\r\nexport default FooterComp;\r\n","import React from \"react\";\r\nclass DisplayComp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.togglePlay = this.togglePlay.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n  togglePlay() {\r\n    this.props.togglePlay();\r\n  }\r\n\r\n  reset() {\r\n    this.props.reset();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"display\">\r\n        <div id={\"timer-label\"}>{this.props.displayText}</div>\r\n        <div id={\"time-left\"}>{this.props.timeLeft}</div>\r\n        <div className=\"disp-btn\">\r\n          <button onClick={this.togglePlay} id={\"start_stop\"}>\r\n            {!this.props.pause ? (\r\n              <i class=\"fas fa-play-circle fa-2x icon\"></i>\r\n            ) : (\r\n              <i class=\"fas fa-pause-circle fa-2x icon\"></i>\r\n            )}\r\n          </button>\r\n          <button onClick={this.reset} id={\"reset\"}>\r\n            <i className=\"fas fa-undo fa-2x icon\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ControlComp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      counter: this.props.value,\r\n    };\r\n\r\n    this.increment = this.increment.bind(this);\r\n    this.decrement = this.decrement.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.reset) {\r\n      this.setState({\r\n        counter: nextProps.value,\r\n      });\r\n      nextProps.resetBack();\r\n    }\r\n  }\r\n\r\n  increment() {\r\n    if (!(this.state.counter >= 60)) {\r\n      this.setState((state) => ({\r\n        counter: state.counter++,\r\n      }));\r\n\r\n      this.props.getTime({\r\n        type: this.props.type,\r\n        time: this.state.counter + 1,\r\n      });\r\n    }\r\n  }\r\n\r\n  decrement() {\r\n    if (!(this.state.counter <= 1)) {\r\n      this.setState((state) => ({\r\n        counter: state.counter--,\r\n      }));\r\n\r\n      this.props.getTime({\r\n        type: this.props.type,\r\n        time: this.state.counter - 1,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.controlClass + \" control\"}>\r\n        <div id={this.props.id}>{this.props.text}</div>\r\n        <div onChange={this.sendValue} id={this.props.valueID}>\r\n          {this.state.counter}\r\n        </div>\r\n        <button onClick={this.increment} id={this.props.btn1ID}>\r\n          <i className=\"fas fa-arrow-alt-circle-up fa-2x icon\"></i>\r\n        </button>\r\n        <button onClick={this.decrement} id={this.props.btn2ID}>\r\n          <i className=\"fas fa-arrow-alt-circle-down fa-2x icon\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PomodoroComp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minLeft: 25,\r\n      secLeft: 0,\r\n      sessValue: 25,\r\n      brkValue: 5,\r\n      reset: false,\r\n      play: false,\r\n      pause: false,\r\n      session: true,\r\n      displayText: \"Session\",\r\n      idVar: \"\",\r\n      flipped: false,\r\n    };\r\n\r\n    this.timeLeftString = this.timeLeftString.bind(this);\r\n    this.getTime = this.getTime.bind(this);\r\n    this.togglePlay = this.togglePlay.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.resetBack = this.resetBack.bind(this);\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.stopTimer = this.stopTimer.bind(this);\r\n    this.playSound = this.playSound.bind(this);\r\n    this.rewind = this.rewind.bind(this);\r\n  }\r\n\r\n  timeLeftString() {\r\n    let min =\r\n      this.state.minLeft < 10 ? \"0\" + this.state.minLeft : this.state.minLeft;\r\n    let sec =\r\n      this.state.secLeft < 10 ? \"0\" + this.state.secLeft : this.state.secLeft;\r\n\r\n    return min + \":\" + sec;\r\n  }\r\n\r\n  getTime(timeLeft) {\r\n    if (timeLeft.type === \"S\") {\r\n      this.setState({\r\n        minLeft: timeLeft.time,\r\n        secLeft: 0,\r\n        sessValue: timeLeft.time,\r\n      });\r\n    } else if (timeLeft.type === \"B\") {\r\n      this.setState({\r\n        brkValue: timeLeft.time,\r\n      });\r\n    }\r\n  }\r\n\r\n  togglePlay() {\r\n    if (!this.state.play) {\r\n      this.startTimer();\r\n      this.setState({\r\n        play: true,\r\n      });\r\n    } else {\r\n      this.stopTimer();\r\n      this.setState({\r\n        play: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  startTimer() {\r\n    let sec = this.state.secLeft;\r\n    let min = this.state.minLeft;\r\n    if (!this.state.pause) {\r\n      if (!this.state.session) {\r\n        min = this.state.brkValue;\r\n      } else {\r\n        min = this.state.sessValue;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      idVar: setInterval(() => {\r\n        if (!this.state.flipped) {\r\n          if (sec === 0) {\r\n            sec = 60;\r\n            min--;\r\n          }\r\n          sec--;\r\n        } else {\r\n          this.setState((state) => ({\r\n            flipped: false,\r\n          }));\r\n        }\r\n        if (sec <= 0 && min <= 0) {\r\n          this.setState((state) => ({\r\n            secLeft: 0,\r\n            minLeft: 0,\r\n            session: !state.session,\r\n            flipped: true,\r\n          }));\r\n\r\n          if (!this.state.session) {\r\n            min = this.state.brkValue;\r\n            this.setState((state) => ({\r\n              displayText: \"Break\",\r\n            }));\r\n          } else {\r\n            min = this.state.sessValue;\r\n            this.setState((state) => ({\r\n              displayText: \"Session\",\r\n            }));\r\n          }\r\n          this.playSound();\r\n        } else {\r\n          this.setState({\r\n            secLeft: sec,\r\n            minLeft: min,\r\n          });\r\n        }\r\n      }, 1000),\r\n    });\r\n  }\r\n\r\n  stopTimer() {\r\n    clearInterval(this.state.idVar);\r\n    this.setState((state) => ({\r\n      pause: true,\r\n    }));\r\n  }\r\n\r\n  reset() {\r\n    this.setState({\r\n      minLeft: 25,\r\n      secLeft: 0,\r\n      sessValue: 25,\r\n      brkValue: 5,\r\n      reset: true,\r\n      displayText: \"Session\",\r\n      idVar: \"\",\r\n      pause: false,\r\n      play: false,\r\n      session: true,\r\n    });\r\n    this.stopTimer();\r\n    this.rewind();\r\n  }\r\n\r\n  resetBack() {\r\n    this.setState({\r\n      reset: false,\r\n    });\r\n  }\r\n\r\n  playSound() {\r\n    let sound = document.getElementById(\"beep\");\r\n    // sound.volume = this.props.volume;\r\n    sound.currentTime = 0;\r\n    sound.play();\r\n  }\r\n\r\n  rewind() {\r\n    let sound = document.getElementById(\"beep\");\r\n    sound.pause();\r\n    sound.currentTime = 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"pomodoro\">\r\n        <ControlComp\r\n          controlClass={\"BreakControl\"}\r\n          id={\"break-label\"}\r\n          text={\"Break Length\"}\r\n          valueID={\"break-length\"}\r\n          value={this.state.brkValue}\r\n          reset={this.state.reset}\r\n          resetBack={this.resetBack}\r\n          type={\"B\"}\r\n          getTime={this.getTime}\r\n          btn1ID={\"break-increment\"}\r\n          btn2ID={\"break-decrement\"}\r\n          running={this.state.play}\r\n        />\r\n\r\n        <DisplayComp\r\n          timeLeft={this.timeLeftString()}\r\n          reset={this.reset}\r\n          pause={this.state.play}\r\n          togglePlay={this.togglePlay}\r\n          displayText={this.state.displayText}\r\n        />\r\n\r\n        <ControlComp\r\n          controlClass={\"SessionControl\"}\r\n          id={\"session-label\"}\r\n          text={\"Session Length\"}\r\n          valueID={\"session-length\"}\r\n          value={this.state.sessValue}\r\n          reset={this.state.reset}\r\n          resetBack={this.resetBack}\r\n          type={\"S\"}\r\n          getTime={this.getTime}\r\n          btn1ID={\"session-increment\"}\r\n          btn2ID={\"session-decrement\"}\r\n          running={this.state.play}\r\n        />\r\n        <audio\r\n          id={\"beep\"}\r\n          src={\r\n            \"http://research.spa.aalto.fi/publications/papers/dafx13-impact/sounds/out_L.wav\"\r\n          }\r\n        ></audio>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PomodoroComp;\r\n","import React from \"react\";\nimport HeaderComp from \"./components/HeaderComp\";\nimport FooterComp from \"./components/FooterComp\";\nimport PomodoroComp from \"./components/PomodoroComp\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <HeaderComp\n          text={\"FCC: Front End Libraries - Project 5, Pomodoro Clock\"}\n        />\n        <PomodoroComp />\n        <FooterComp text={\"\\u00A9 2020 Mahmoud Mheisen\"} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}